version: "3.9"

services:
    redis:
        image: "redis:6.2.3"
        container_name: "redis"
        restart: always
        ports: 
            - 6379:6379
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.2

    clickhouse:
        image: "yandex/clickhouse-server:21.6.4.26-alpine"
        container_name: "clickhouse"
        restart: always
        volumes:
            - "${BASE_PATH}/clickhouse:/var/lib/clickhouse"
        ports: 
            - 8123:8123
            - 9000:9000
            - 9363:9363
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.5

    collector:
        image: "collector"
        restart: always
        volumes:
            - "${BASE_PATH}/webalytic:/mnt/log"
        environment: 
            - APP_PORT=80
            #- APP_PORT=8090
            - APP_NAME=collector1
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_STREAM=${REDIS_STREAM}
            - REDIS_HANDLER=${REDIS_HANDLER}
            - REDIS_GROUP=${REDIS_GROUP}
            - CONSUL_ENABLED=${CONSUL_ENABLED}
            - CONSUL_ADDRESS=${CONSUL_ADDRESS}
            - LOG_LEVEL=${LOG_LEVEL}
            - LOG_PATH=${LOG_PATH}
#        ports: 
#            - 8090:8090
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.3

    collector1:
        image: "collector"
        restart: always
        volumes:
            - "${BASE_PATH}/webalytic:/mnt/log"
        environment: 
            - APP_PORT=80
            #- APP_PORT=8092
            - APP_NAME=collector2
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_STREAM=${REDIS_STREAM}
            - REDIS_HANDLER=${REDIS_HANDLER}
            - REDIS_GROUP=${REDIS_GROUP}
            - CONSUL_ENABLED=${CONSUL_ENABLED}
            - CONSUL_ADDRESS=${CONSUL_ADDRESS}
            - LOG_LEVEL=${LOG_LEVEL}
            - LOG_PATH=${LOG_PATH}
#        ports: 
#            - 8092:8092
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.6

    hander:
        image: "handler"
        container_name: "webalytic_handler"
        restart: always
        volumes:
            - "${BASE_PATH}/webalytic:/mnt/log"
        environment: 
            - APP_NAME=handler
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_STREAM=${REDIS_STREAM}
            - REDIS_HANDLER=${REDIS_HANDLER}
            - REDIS_GROUP=${REDIS_GROUP}
            - CLICKHOUSE_HOST=${CLICKHOUSE_HOST}
            - CLICKHOUSE_DBNAME=${CLICKHOUSE_DBNAME}
            - CLICKHOUSE_FLUSH_INTERVAL=${CLICKHOUSE_FLUSH_INTERVAL}
            - CLICKHOUSE_FLUSH_LIMIT=${CLICKHOUSE_FLUSH_LIMIT}
            - CLICKHOUSE_HTTP_PORT=${CLICKHOUSE_HTTP_PORT}
            - CLICKHOUSE_SERVICE_PORT=${CLICKHOUSE_SERVICE_PORT}
            - LOG_LEVEL=${LOG_LEVEL}
            - LOG_PATH=${LOG_PATH}
        ports: 
            - 8091:8091
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.4

    prometheus:
        image: "prom/prometheus:v2.30.0"
        volumes: 
            - "${BASE_PATH}/prometheus:/etc/prometheus"
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 9090:9090
        links:
            - cadvisor:cadvisor
        depends_on:
            - cadvisor
        networks:
            - webalytic_net
        restart: always

    node-exporter:
        image: "prom/node-exporter"
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /../:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - --collector.filesystem.ignored-mount-points
            - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        ports:
            - 9100:9100
        networks: 
            - webalytic_net
        restart: always
        deploy:
            mode: global

    cadvisor:
        image: "gcr.io/cadvisor/cadvisor"
        volumes:
            - /../:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        ports:
            - 8080:8080
        restart: always
        networks:
            - webalytic_net
        deploy:
            mode: global

    grafana:
        image: grafana/grafana
        user: "472"
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes: 
            - grafana_data:/var/lib/grafana
            - "${BASE_PATH}/grafana/provisioning:/etc/grafana/provisioning"
        env_file:
            - ${BASE_PATH}/grafana/config.monitoring
        networks:
            - webalytic_net
        restart: always

    consul:
        image: consul:1.9.3
        restart: always
        volumes:
            - ${BASE_PATH}/consul/server1.json:/consul/server1.json:ro
            - ${BASE_PATH}/consul/certs/:/consul/config/certs/:ro
        networks: 
            webalytic_net:
                ipv4_address: 172.28.1.10
        ports:
            - 8500:8500
            - 8600:8600/tcp
            - 8600:8600/udp
        #command: 'agent -bootstrap-expect=1'

    haproxy:
        image: haproxy:alpine
        restart: always
        ports:
            - 80:80
            - 1936:1936
        volumes:
            - ${BASE_PATH}/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        networks: 
            - webalytic_net
#    api_gw:
#        image: nginx:1.21.3
#        restart: always
#        volumes: 
#            - ${BASE_PATH}/nginx/api_gw.conf:/etc/nginx/conf.d/default.conf:ro
#            - ${BASE_PATH}/nginx/api_gw_haproxy.cfg:/etc/nginx/conf.d/haproxy.cfg
#        ports:
#            - 80:80

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
    webalytic_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
